//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        [DbFunction("Entities", "Employees_OfLeaderRecursive")]
        public virtual IQueryable<Employees_OfLeaderRecursive_Result> Employees_OfLeaderRecursive(Nullable<int> leaderEmployee_ID, Nullable<bool> isPartentIncluded, Nullable<bool> isTerminatedIncluded)
        {
            var leaderEmployee_IDParameter = leaderEmployee_ID.HasValue ?
                new ObjectParameter("LeaderEmployee_ID", leaderEmployee_ID) :
                new ObjectParameter("LeaderEmployee_ID", typeof(int));
    
            var isPartentIncludedParameter = isPartentIncluded.HasValue ?
                new ObjectParameter("IsPartentIncluded", isPartentIncluded) :
                new ObjectParameter("IsPartentIncluded", typeof(bool));
    
            var isTerminatedIncludedParameter = isTerminatedIncluded.HasValue ?
                new ObjectParameter("IsTerminatedIncluded", isTerminatedIncluded) :
                new ObjectParameter("IsTerminatedIncluded", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Employees_OfLeaderRecursive_Result>("[Entities].[Employees_OfLeaderRecursive](@LeaderEmployee_ID, @IsPartentIncluded, @IsTerminatedIncluded)", leaderEmployee_IDParameter, isPartentIncludedParameter, isTerminatedIncludedParameter);
        }
    
        public virtual int Award_Deactivate(Nullable<int> award_ID)
        {
            var award_IDParameter = award_ID.HasValue ?
                new ObjectParameter("Award_ID", award_ID) :
                new ObjectParameter("Award_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Award_Deactivate", award_IDParameter);
        }
    
        public virtual int Award_I(Nullable<int> presenter_ID, Nullable<int> recipient_ID, Nullable<System.DateTime> presentedOn, string reason, Nullable<bool> isDifferenceMaker, Nullable<decimal> amount, string awardDescription, ObjectParameter award_ID)
        {
            var presenter_IDParameter = presenter_ID.HasValue ?
                new ObjectParameter("Presenter_ID", presenter_ID) :
                new ObjectParameter("Presenter_ID", typeof(int));
    
            var recipient_IDParameter = recipient_ID.HasValue ?
                new ObjectParameter("Recipient_ID", recipient_ID) :
                new ObjectParameter("Recipient_ID", typeof(int));
    
            var presentedOnParameter = presentedOn.HasValue ?
                new ObjectParameter("PresentedOn", presentedOn) :
                new ObjectParameter("PresentedOn", typeof(System.DateTime));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var isDifferenceMakerParameter = isDifferenceMaker.HasValue ?
                new ObjectParameter("IsDifferenceMaker", isDifferenceMaker) :
                new ObjectParameter("IsDifferenceMaker", typeof(bool));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var awardDescriptionParameter = awardDescription != null ?
                new ObjectParameter("AwardDescription", awardDescription) :
                new ObjectParameter("AwardDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Award_I", presenter_IDParameter, recipient_IDParameter, presentedOnParameter, reasonParameter, isDifferenceMakerParameter, amountParameter, awardDescriptionParameter, award_ID);
        }
    
        public virtual int Award_Redeem(Nullable<System.DateTime> redeemedOn, string redemptionLocation, string redemptionComment, Nullable<int> award_ID)
        {
            var redeemedOnParameter = redeemedOn.HasValue ?
                new ObjectParameter("RedeemedOn", redeemedOn) :
                new ObjectParameter("RedeemedOn", typeof(System.DateTime));
    
            var redemptionLocationParameter = redemptionLocation != null ?
                new ObjectParameter("RedemptionLocation", redemptionLocation) :
                new ObjectParameter("RedemptionLocation", typeof(string));
    
            var redemptionCommentParameter = redemptionComment != null ?
                new ObjectParameter("RedemptionComment", redemptionComment) :
                new ObjectParameter("RedemptionComment", typeof(string));
    
            var award_IDParameter = award_ID.HasValue ?
                new ObjectParameter("Award_ID", award_ID) :
                new ObjectParameter("Award_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Award_Redeem", redeemedOnParameter, redemptionLocationParameter, redemptionCommentParameter, award_IDParameter);
        }
    
        public virtual ObjectResult<Award_S_Result> Award_S(Nullable<int> award_ID)
        {
            var award_IDParameter = award_ID.HasValue ?
                new ObjectParameter("Award_ID", award_ID) :
                new ObjectParameter("Award_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Award_S_Result>("Award_S", award_IDParameter);
        }
    
        public virtual ObjectResult<Awards_EmployeeHasNotRedeemedDuringPeriod_Result> Awards_EmployeeHasNotRedeemedDuringPeriod(Nullable<int> employee_ID, Nullable<System.DateTime> startingOn, Nullable<System.DateTime> endingOn)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            var startingOnParameter = startingOn.HasValue ?
                new ObjectParameter("StartingOn", startingOn) :
                new ObjectParameter("StartingOn", typeof(System.DateTime));
    
            var endingOnParameter = endingOn.HasValue ?
                new ObjectParameter("EndingOn", endingOn) :
                new ObjectParameter("EndingOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Awards_EmployeeHasNotRedeemedDuringPeriod_Result>("Awards_EmployeeHasNotRedeemedDuringPeriod", employee_IDParameter, startingOnParameter, endingOnParameter);
        }
    
        public virtual ObjectResult<Awards_EmployeePresentedDuringPeriod_Result> Awards_EmployeePresentedDuringPeriod(Nullable<int> employee_ID, Nullable<System.DateTime> startingOn, Nullable<System.DateTime> endingOn)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            var startingOnParameter = startingOn.HasValue ?
                new ObjectParameter("StartingOn", startingOn) :
                new ObjectParameter("StartingOn", typeof(System.DateTime));
    
            var endingOnParameter = endingOn.HasValue ?
                new ObjectParameter("EndingOn", endingOn) :
                new ObjectParameter("EndingOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Awards_EmployeePresentedDuringPeriod_Result>("Awards_EmployeePresentedDuringPeriod", employee_IDParameter, startingOnParameter, endingOnParameter);
        }
    
        public virtual ObjectResult<Awards_EmployeeReceived_Result> Awards_EmployeeReceived(Nullable<int> employee_ID)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Awards_EmployeeReceived_Result>("Awards_EmployeeReceived", employee_IDParameter);
        }
    
        public virtual ObjectResult<Awards_EmployeeReceivedDuringPeriod_Result> Awards_EmployeeReceivedDuringPeriod(Nullable<int> employee_ID, Nullable<System.DateTime> startingOn, Nullable<System.DateTime> endingOn)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            var startingOnParameter = startingOn.HasValue ?
                new ObjectParameter("StartingOn", startingOn) :
                new ObjectParameter("StartingOn", typeof(System.DateTime));
    
            var endingOnParameter = endingOn.HasValue ?
                new ObjectParameter("EndingOn", endingOn) :
                new ObjectParameter("EndingOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Awards_EmployeeReceivedDuringPeriod_Result>("Awards_EmployeeReceivedDuringPeriod", employee_IDParameter, startingOnParameter, endingOnParameter);
        }
    
        public virtual ObjectResult<Awards_EmployeeRedeemedDuringPeriod_Result> Awards_EmployeeRedeemedDuringPeriod(Nullable<int> employee_ID, Nullable<System.DateTime> startingOn, Nullable<System.DateTime> endingOn)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            var startingOnParameter = startingOn.HasValue ?
                new ObjectParameter("StartingOn", startingOn) :
                new ObjectParameter("StartingOn", typeof(System.DateTime));
    
            var endingOnParameter = endingOn.HasValue ?
                new ObjectParameter("EndingOn", endingOn) :
                new ObjectParameter("EndingOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Awards_EmployeeRedeemedDuringPeriod_Result>("Awards_EmployeeRedeemedDuringPeriod", employee_IDParameter, startingOnParameter, endingOnParameter);
        }
    
        public virtual ObjectResult<Awards_RedeemedDuringPayPeriod_Result> Awards_RedeemedDuringPayPeriod(string payPeriod, Nullable<bool> isDifferenceMaker)
        {
            var payPeriodParameter = payPeriod != null ?
                new ObjectParameter("PayPeriod", payPeriod) :
                new ObjectParameter("PayPeriod", typeof(string));
    
            var isDifferenceMakerParameter = isDifferenceMaker.HasValue ?
                new ObjectParameter("IsDifferenceMaker", isDifferenceMaker) :
                new ObjectParameter("IsDifferenceMaker", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Awards_RedeemedDuringPayPeriod_Result>("Awards_RedeemedDuringPayPeriod", payPeriodParameter, isDifferenceMakerParameter);
        }
    
        public virtual ObjectResult<Awards_TeamPresentedDuringPeriod_Result> Awards_TeamPresentedDuringPeriod(Nullable<int> leaderEmployee_ID, Nullable<System.DateTime> startingOn, Nullable<System.DateTime> endingOn)
        {
            var leaderEmployee_IDParameter = leaderEmployee_ID.HasValue ?
                new ObjectParameter("LeaderEmployee_ID", leaderEmployee_ID) :
                new ObjectParameter("LeaderEmployee_ID", typeof(int));
    
            var startingOnParameter = startingOn.HasValue ?
                new ObjectParameter("StartingOn", startingOn) :
                new ObjectParameter("StartingOn", typeof(System.DateTime));
    
            var endingOnParameter = endingOn.HasValue ?
                new ObjectParameter("EndingOn", endingOn) :
                new ObjectParameter("EndingOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Awards_TeamPresentedDuringPeriod_Result>("Awards_TeamPresentedDuringPeriod", leaderEmployee_IDParameter, startingOnParameter, endingOnParameter);
        }
    
        public virtual ObjectResult<Awards_TeamReceivedDuringPeriod_Result> Awards_TeamReceivedDuringPeriod(Nullable<int> leaderEmployee_ID, Nullable<System.DateTime> startingOn, Nullable<System.DateTime> endingOn)
        {
            var leaderEmployee_IDParameter = leaderEmployee_ID.HasValue ?
                new ObjectParameter("LeaderEmployee_ID", leaderEmployee_ID) :
                new ObjectParameter("LeaderEmployee_ID", typeof(int));
    
            var startingOnParameter = startingOn.HasValue ?
                new ObjectParameter("StartingOn", startingOn) :
                new ObjectParameter("StartingOn", typeof(System.DateTime));
    
            var endingOnParameter = endingOn.HasValue ?
                new ObjectParameter("EndingOn", endingOn) :
                new ObjectParameter("EndingOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Awards_TeamReceivedDuringPeriod_Result>("Awards_TeamReceivedDuringPeriod", leaderEmployee_IDParameter, startingOnParameter, endingOnParameter);
        }
    
        public virtual ObjectResult<Awards_TeamRedeemedDuringPeriod_Result> Awards_TeamRedeemedDuringPeriod(Nullable<int> leaderEmployee_ID, Nullable<System.DateTime> startingOn, Nullable<System.DateTime> endingOn)
        {
            var leaderEmployee_IDParameter = leaderEmployee_ID.HasValue ?
                new ObjectParameter("LeaderEmployee_ID", leaderEmployee_ID) :
                new ObjectParameter("LeaderEmployee_ID", typeof(int));
    
            var startingOnParameter = startingOn.HasValue ?
                new ObjectParameter("StartingOn", startingOn) :
                new ObjectParameter("StartingOn", typeof(System.DateTime));
    
            var endingOnParameter = endingOn.HasValue ?
                new ObjectParameter("EndingOn", endingOn) :
                new ObjectParameter("EndingOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Awards_TeamRedeemedDuringPeriod_Result>("Awards_TeamRedeemedDuringPeriod", leaderEmployee_IDParameter, startingOnParameter, endingOnParameter);
        }
    
        public virtual ObjectResult<Employee_HasNetworkID_Result> Employee_HasNetworkID(string networkID)
        {
            var networkIDParameter = networkID != null ?
                new ObjectParameter("NetworkID", networkID) :
                new ObjectParameter("NetworkID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee_HasNetworkID_Result>("Employee_HasNetworkID", networkIDParameter);
        }
    
        public virtual ObjectResult<Employees_OfLeader_Result> Employees_OfLeader(Nullable<int> leaderEmployee_ID)
        {
            var leaderEmployee_IDParameter = leaderEmployee_ID.HasValue ?
                new ObjectParameter("LeaderEmployee_ID", leaderEmployee_ID) :
                new ObjectParameter("LeaderEmployee_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employees_OfLeader_Result>("Employees_OfLeader", leaderEmployee_IDParameter);
        }
    
        public virtual ObjectResult<Leader_OfEmployee_Result> Leader_OfEmployee(Nullable<int> employee_ID)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Leader_OfEmployee_Result>("Leader_OfEmployee", employee_IDParameter);
        }
    
        public virtual ObjectResult<Leader_S_Result> Leader_S(Nullable<int> employee_ID)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Leader_S_Result>("Leader_S", employee_IDParameter);
        }
    
        public virtual ObjectResult<string> PayPeriod_OfPayrollDeadlineOn(Nullable<System.DateTime> payrollDeadlineOn)
        {
            var payrollDeadlineOnParameter = payrollDeadlineOn.HasValue ?
                new ObjectParameter("PayrollDeadlineOn", payrollDeadlineOn) :
                new ObjectParameter("PayrollDeadlineOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PayPeriod_OfPayrollDeadlineOn", payrollDeadlineOnParameter);
        }
    
        public virtual ObjectResult<PaySchedule_OfYear_Result> PaySchedule_OfYear(Nullable<short> payrollYear)
        {
            var payrollYearParameter = payrollYear.HasValue ?
                new ObjectParameter("PayrollYear", payrollYear) :
                new ObjectParameter("PayrollYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaySchedule_OfYear_Result>("PaySchedule_OfYear", payrollYearParameter);
        }
    
        public virtual ObjectResult<string> Team_OfEmployee(Nullable<int> employee_ID)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Team_OfEmployee", employee_IDParameter);
        }
    
        public virtual ObjectResult<Awards_TeamHasNotRedeemedDuringPeriod_Result> Awards_TeamHasNotRedeemedDuringPeriod(Nullable<int> leaderEmployee_ID, Nullable<System.DateTime> startingOn, Nullable<System.DateTime> endingOn)
        {
            var leaderEmployee_IDParameter = leaderEmployee_ID.HasValue ?
                new ObjectParameter("LeaderEmployee_ID", leaderEmployee_ID) :
                new ObjectParameter("LeaderEmployee_ID", typeof(int));
    
            var startingOnParameter = startingOn.HasValue ?
                new ObjectParameter("StartingOn", startingOn) :
                new ObjectParameter("StartingOn", typeof(System.DateTime));
    
            var endingOnParameter = endingOn.HasValue ?
                new ObjectParameter("EndingOn", endingOn) :
                new ObjectParameter("EndingOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Awards_TeamHasNotRedeemedDuringPeriod_Result>("Awards_TeamHasNotRedeemedDuringPeriod", leaderEmployee_IDParameter, startingOnParameter, endingOnParameter);
        }
    
        public virtual ObjectResult<PaySchedule_MinMaxOfYear_Result> PaySchedule_MinMaxOfYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaySchedule_MinMaxOfYear_Result>("PaySchedule_MinMaxOfYear");
        }
    
        public virtual ObjectResult<Employees_AllActive_Result> Employees_AllActive()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employees_AllActive_Result>("Employees_AllActive");
        }
    
        public virtual ObjectResult<string> Employee_Location(Nullable<int> employee_ID)
        {
            var employee_IDParameter = employee_ID.HasValue ?
                new ObjectParameter("Employee_ID", employee_ID) :
                new ObjectParameter("Employee_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Employee_Location", employee_IDParameter);
        }
    }
}
